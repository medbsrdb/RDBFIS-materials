version 1.2
@totalColumns 27
@permitEmpty
@ignoreColumnNameCase
// acoustics_identity
survey_name: any("MEDIAS")
cd_country: any("BGR","GRC","ESP","FRA","HRV","ITA","CYP","MLT","ROU","SVN")
gsa: any("GSA1","GSA2","GSA3","GSA4","GSA5","GSA6","GSA7","GSA8","GSA9","GSA10","GSA11.1","GSA11.2","GSA11","GSA12","GSA13","GSA14","GSA15","GSA16","GSA17","GSA18","GSA19","GSA20","GSA21","GSA22","GSA23","GSA24","GSA25","GSA26","GSA27","GSA28","GSA29","GSA30")
survey_area: any("AdrSea-HRV-IOR","AdrSea-ITA-IRBIM","AdrSea-SVN-FRIS","AegSea-GRC-IMBRIW","BSea-BGR-IO-BAS","BSea-ROU-NIMRD","EIonSea-GRC-IMBRIW","GLion-FRA-IFREMER","IberCoast-ESP-CNIEO","SardEast-ITA-IAS","SicChan-ITA-IAS","TyrLigSea-ITA-IAS")
cd_centre: any("CNR-FRIS","IEO/CSIC","CNR","CSIC","FRIS","HCMR","IFREMER","IO-BAS","IOR","JRC","NIMRD","FAO","ICES")
cd_inst: switch(($cd_centre/is("CNR-FRIS"),is("IRBIM-FRIS")),($cd_centre/is("IEO/CSIC"),is("COB")),($cd_centre/is("CNR"),any("IAS","IRBIM")),($cd_centre/is("CSIC"),any("CNIEO","ICM")),($cd_centre/is("FRIS"),is("FRIS")),($cd_centre/is("HCMR"),is("IMBRIW")),($cd_centre/is("IFREMER"),is("IFREMER")),($cd_centre/is("IO-BAS"),is("IO-BAS")),($cd_centre/is("IOR"),is("IOR")),($cd_centre/is("NIMRD"),is("NIMRD")))
cd_vessel: any("BIO","EUR","PHI","AEG","DAL","MIO")
sampling_year: positiveInteger range(2009,2024)
cd_cruise: length(*,14)
echo_sounder_type: any("BioSonics DT-X","ES38B","Simrad EK500","Simrad EK60","Simrad EK80","Simrad EK60, EK80")
transects_design: any("mixed","parallel","zig zag")
inter_transect_distance: regex("^-1|([5-9]|1[0-2])$") //positiveInteger range(5,12) or -1 if not known
edsu: regex("^(0(?:\.\d{1,2})?|[1-4](?:\.\d{1,2})?|5(?:\.0{1,2})?)$") // real numbers between 0.1 and 5, inclusive, allow up (but not exactly) 2 digits after the decimal point
covered_area_size: regex("^(100|[1-9]\d{2,4}|99999)(\.\d{1,2})?$") // real numbers between 100 and 99,999 with at maximum 2 digits after the decimal point: in ΝΜ2
effectively_covered_area_size: regex("^(100|[1-9]\d{2,4}|99999)(\.\d{1,2})?$") // real numbers between 100 and 99,999 with at maximum 2 digits after the decimal point: in ΝΜ2
n_hauls: regex("^(?:-1|[1-9][0-9]{0,2})$") //positiveInteger range(1,999) or -1; auto filled
n_ctds: regex("^(?:-1|[1-9][0-9]{0,2})$") //positiveInteger range(1,999) or -1; auto filled
echo_sounding_depth_min: regex("^(?:-1|[1-9][0-9]?|[1-9][0-9]{2}|1500)$") // positiveInteger range(10,1500) or -1 , auto filled medias_acoustics_sset_nasc (Nautical Area Scattering Coefficient)
echo_sounding_depth_max: regex("^(?:-1|[1-9][0-9]?|[1-9][0-9]{2}|1500)$") // positiveInteger range(10,1500) or -1 , auto filled from medias_acoustics_sset_nasc (Nautical Area Scattering Coefficient)
vessel_speed: regex("^(5|6|7|8|9|10)(\.\d{1,2})?$") // real numbers between 5 and 10, inclusive, with at maximum 2 digits after the decimal point
start_date: regex("^(0[1-9]|[12][0-9]|3[01])\/(0[1-9]|1[0,1,2])\/(19|20)\d{2}") ends($sampling_year)
end_date: regex("^(0[1-9]|[12][0-9]|3[01])\/(0[1-9]|1[0,1,2])\/(19|20)\d{2}") ends($sampling_year)
analysis_sw: any("Echoview","MOVIES3D","MOVIES")
software_version: length(*,14)
file_format: regex("^(raw|hac|ek5|ek6|dt4|BI500)(-(raw|hac|ek5|ek6|dt4|BI500))*$") // allow a specific set of values, either individually or in combinations separated by a dash (-) //old:  any("raw","hac","ek5","BI500","ek6","dt4")
onboard_group: length(*,512)
notes: length(*,2048)
