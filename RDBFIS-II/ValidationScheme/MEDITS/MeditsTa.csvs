version 1.2
@totalColumns 43
@permitEmpty
@ignoreColumnNameCase
type_of_file: is("TA")
country: any("ALB","CYP","ESP","FRA","GRC","HRV","ITA","MLT","MOR","MON","SVN","ROU","BGR")
area: any("1","2","3","4","5","6","7","8","9","01","02","03","04","05","06","07","08","09","10","11.1","11.2","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30")
vessel: any("CIR","MIZ","DLP","EGE","SDM","AND","BIM","BIO","CHA","COR","DAP","DEG","DEM","EGU","EVA","FRP","FUL","GAB","GIS","IGO","IRO","LEU","LIB","MEG","NAU","NAV","NUS","PAR","PEC","PRI","ROS","SAN","TAM","MOL")
gear: any("GOC73","BOTR","RAP","OTB")
rigging: any("GC73","NA")
doors: any("WHS8","W2","NA")
year: positiveInteger range(1993,2100)
month: positiveInteger range(1,12)
day: positiveInteger range(1,31)
haul_number: unique($country,$area,$vessel,$year,$month,$day,$haul_number) positiveInteger range(1,999)
codend_closing: any("S","C")
part_of_the_codend: any("S","A","M","P")
shooting_time: (positiveInteger range(0,2400))
shooting_quadrant: any("1","3","5","7")
shooting_latitude: regex("^(3400(\.0{1,2})?|3[4-9][0-9]{2}(\.[0-9]{1,2})?|4[0-5][0-9]{2}(\.[0-9]{1,2})?|4600(\.0{1,2})?)$")
shooting_longitude: regex("^(?:0|[1-9]\d{0,2}|[1-2]\d{3}|3[0-4]\d{2}|3500)(?:\.\d{1,2})?$")
shooting_depth: (positiveInteger range(10,900)) or is("0")
hauling_time: (positiveInteger range(0,2400))
hauling_quadrant: any("1","3","5","7")
hauling_latitude: regex("^(3400(\.0{1,2})?|3[4-9][0-9]{2}(\.[0-9]{1,2})?|4[0-5][0-9]{2}(\.[0-9]{1,2})?|4600(\.0{1,2})?)$")
hauling_longitude: regex("^(?:0|[1-9]\d{0,2}|[1-2]\d{3}|3[0-4]\d{2}|3500)(?:\.\d{1,2})?$")
hauling_depth: (positiveInteger range(10,900)) or is("0")
haul_duration: (positiveInteger range(5,90))
validity: any("I","V")
course: any("R","N")
recorded_species: (positiveInteger range(0,4))
distance: (positiveInteger range(1000,9999))
vertical_opening: (positiveInteger range(10,100))
wing_opening: (positiveInteger range(50,250))
geometrical_precision: any("M","E")
bridles_length: any("100","150","200")
warp_length: (positiveInteger range(100,2200))
warp_diameter: (positiveInteger range(10,30))
hydrological_station: length(*,5)
observations: (positiveInteger range(0,9))
bottom_temperature_beginning: regex("^(?:-1(?:\.00)?|(?:[0-9]|1[0-9]|2[0-9])(?:\.[0-9]{1,2})?|30(?:\.0{1,2})?)$")
bottom_temperature_end: regex("^(?:-1(?:\.00)?|(?:[0-9]|1[0-9]|2[0-9])(?:\.[0-9]{1,2})?|30(?:\.0{1,2})?)$")
measuring_system: any("VA","SO","XA","SA","SI","CT","SB","NA")
number_of_the_stratum: any("1","2","3","4","5","291","292","293","11101","11102","11103","11104","11105","11106","11107","11108","11109","11110","11401","11402","11403","11404","11405","11406","11407","11408","11409","11410","11501","11502","11503","11504","11505","11507","11508","11509","11510","11201","11202","11203","11204","11205","11301","11302","11303","11304","11305","12101","12102","12103","12104","12105","12106","12107","12108","12109","12110","13101","13102","13103","13104","13105","13106","13107","13108","13109","13110","13201","13202","13203","13204","13205","13206","13207","13208","13209","13210","13211","13212","13213","13214","13215","13216","13217","13218","13219","13220","13401","13402","13403","13404","13405","13406","13407","13408","13409","13410","13301","13302","13303","13304","13305","13306","13307","13308","13309","13310","13311","13312","13313","13314","13315","13316","13317","13318","13319","13320","13321","13322","13323","13324","13325","13326","13327","13328","13329","13330","13331","13332","13333","13334","13335","13501","13502","13503","13504","13505","13411","13412","13413","13414","13415","21101","21102","21103","21104","21105","21106","21107","21108","21109","21110","21111","21112","21113","21114","21115","21116","21117","21118","21119","21120","22121","22122","22123","22124","22125","22126","22127","22128","22129","22130","22131","22132","22133","22134","22135","22136","22137","22138","22139","22140","22141","22142","22143","22144","22145","22146","22147","22148","22149","22150","22101","22102","22103","22104","22105","22106","22107","22108","22109","22110","22111","22112","22113","22114","22115","22116","22117","22118","22119","22120","22201","22202","22203","22204","22205","22301","22302","22303","22304","22305","22401","22402","22403","22404","22405","22501","22502","22503","22504","22505","22506","22507","22508","22509","22510","32101","32102","32103","32104","32105","")
bottom_salinity_beginning: regex("^(?:-1(?:\.00)?|(?:[0-9]|[1-4][0-9])(?:\.[0-9]{1,2})?|50(?:\.0{1,2})?)$")
bottom_salinity_end: regex("^(?:-1(?:\.00)?|(?:[0-9]|[1-4][0-9])(?:\.[0-9]{1,2})?|50(?:\.0{1,2})?)$")
measuring_system_salinity: any("VA","SO","XA","SA","SI","CT","SB","NA","CD")
